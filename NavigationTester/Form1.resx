<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="rollPictureBox.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKkAAACeCAIAAADGyL1tAAAABGdBTUEAALGPC/xhBQAABXJJREFUeF7t
        k1uOKyEMRGf/q50d3NtSl1qoMkl42AZMHfkrpsGuo/z8ilOR+3OR+3OR+3PJ7P7fz8944a6MpNqNtHkU
        XkrB9suQm8jCBNuy6wKkYW5hpt3YbG4K/XPhmzHozs+FbzZhj3Ep4neF057Qi+8Kp9dm9Skp09fCuRnQ
        JK+Fc6uy7nyUIxUOrQHNRoVD67HiZJQdFQ6tB81JhUMrsc0fCCd2gCYvCyfWYKFpKKan0N4N2uIptBdg
        iVEonafQ3hna6Cm0pzJ5CErkKbSzQNs9hfYkZj5PQdyFXkZo07vQm8G0tymCu9DLC+17F3rhTHiYNr8L
        vTOg3e9CL5DoJ2nhu9A7CUrgLvSiCH2PVr0KjVOhNK5CI4S4x2jJq9A4G8rkKjT8CXqJ1rsKDTEvnIhn
        aLGr0BAF8RH5vkH7XIWG+AvK6io0fAh1j1/FeyITc7w9co1MhOXmdXXYAimJSc/l3pjRcxOQof2lAUMf
        gneSxjd6j3sarnlaXkeDXoWGGMAvUkf3+FWM4Zeq2V1+IwqnbG0uchpOPHgkbHCLx1jiFfOc5X4bzHMe
        vcJ8IPEB27Qt3eMn4UkZ+GDmQx8bziEqMcy8/2PDIUQTVsnbuMdPIgqT8Du/LN8eeV70YZK/gXv8JGIZ
        V9DzWflq98NikHELo+7xk5jBoIjmb8r3+p4UVgy6GHKPn8Q8RnS0fVC+1PGYMGfESL97/CRm0y1F7ren
        W0rD6fKN1meEH91eOt3jJ7EGfWrkPgOlmno7tec6rhaRdAiS+yR0CJL7JJSCKh1VHWq9VEyhVZPc56FV
        k9znoVWT3Oeh1FRj6vuJpuvEXJpkyX0qmmTJfSqaZMl9KppkyX0qmmR9OdF0l1iBemVyn416ZXKfjXpl
        cp+NemVyn416ZXKfjXplcp+NemVyn416ZXKfjXplcp+NemVyn5BKZZ/azxU1F4l1qFT2pf3c8vUisQ6V
        yuQ+G/XK5D4b9crkPhv1yuQ+G/XK5D4b9crkPhv1yuQ+G/XK5D4b9crkPhv1yuQ+G/XKvhutv0tMp0mW
        3KeiSZbcp6JJltynokmW3KeiSVaVzqYbxSxKTTWm5D4PrZrkPg+tmuQ+D62aal223iuCKQVVOpL7JHQI
        kvskdAhqENlxu4ihVFNvR+4z0Kem033TG8KbPi9tCvveEK50S5H77emW0u++9SXhwYiRZn/dLwkPRnQM
        ue94Txgy6KJH3sh7wpBBEaPu+14V44xb6DQ3+KoYZ1yBgfvut0U3Jvn3axt/W3RjEr6N+5EJRCtWyQ85
        sxpC1GOY+agwqzlEJWXgg5lbuh8cRXzFNm0DW7YDiXeY5yz322Ces40q87EE4ZGwmSeP4cSNU7aWkpxG
        PBy/VOV+dfxSNTbkN+iZuOZpr8d13KPwTtLFjffQJxCQoZeYgNETE5Oeo5WYBfIRlpuvkrA10kCJXYWG
        A6Hur0JD/AVldRUaPkTIiNxnXyilq9BwI8gEbXUVGmJeOHEOaL2r0DgbyuQqNPwJFUBLXoXGqVAaV6ER
        QnT6tOpd6J0EJXAXelFMyJ0Wvgu9M6Dd70IvkGmh0+Z3oZcX2vcu9MKZGTdFcBd6GaFN70JvBpOzpiCe
        QjsLtN1TaE9iiZQpkafQ3hna6Cm0p7JKvhRNWTixG7RFWTgxm7WSpYzKwokdoMnLwok1WDFTyqssnFgV
        mrYsnFiJddOk7KhwaA1oNiocWo+N/0l34dwMaJLXwrlVWX2+G8r0XeG0J/Tiu8LptdljygeK+HPhmzHo
        zs+FbzZhs3FvKPG+wl3Wt23ElkM/kID4whx7svf0JWTFr/De/uTZ5BVy1le4KyOZdxOfkftzkftzkftz
        kftT+f39D3dXiTGOZZvxAAAAAElFTkSuQmCC
</value>
  </data>
</root>